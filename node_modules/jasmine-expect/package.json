{
  "name": "jasmine-expect",
  "version": "1.21.0",
  "description": "35+ additional matchers for the Jasmine BDD JavaScript test library",
  "main": "index.js",
  "author": {
    "name": "Jamie Mason",
    "url": "https://github.com/JamieMason"
  },
  "license": "MIT",
  "gitHead": "76aba51fb924e3f3c9b172174a7ee7296a0d950b",
  "readmeFilename": "README.md",
  "devDependencies": {
    "karma": "~0.8",
    "grunt": "~0.4.1",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-watch": "~0.4.4"
  },
  "scripts": {
    "test": "karma start --single-run --browsers PhantomJS"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/JamieMason/Jasmine-Matchers.git"
  },
  "keywords": [
    "jasmine",
    "BDD",
    "TDD",
    "testing"
  ],
  "bugs": {
    "url": "https://github.com/JamieMason/Jasmine-Matchers/issues"
  },
  "readme": "# Jasmine-Matchers\n\n    npm install jasmine-expect --save-dev\n\n> If you have some useful matchers of your own, please add them via [Pull Request](https://github.com/JamieMason/Jasmine-Matchers/pull/new/master).\n\nThe [Jasmine testing framework](http://pivotal.github.com/jasmine/) from [Pivotal Labs](http://pivotallabs.com/) comes with this [default set of matchers](https://github.com/pivotal/jasmine/wiki/Matchers);\n\n    expect(fn).toThrow(e);\n    expect(instance).toBe(instance);\n    expect(mixed).toBeDefined();\n    expect(mixed).toBeFalsy();\n    expect(number).toBeGreaterThan(number);\n    expect(number).toBeLessThan(number);\n    expect(mixed).toBeNull();\n    expect(mixed).toBeTruthy();\n    expect(mixed).toBeUndefined();\n    expect(array).toContain(member);\n    expect(string).toContain(substring);\n    expect(mixed).toEqual(mixed);\n    expect(mixed).toMatch(pattern);\n\nAll [Jasmine-Matchers](https://github.com/JamieMason/Jasmine-Matchers) does is add a few more;\n\n## Arrays\n\n    expect(array).toBeArray();\n    expect(array).toBeArrayOfBooleans();\n    expect(array).toBeArrayOfNumbers();\n    expect(array).toBeArrayOfObjects();\n    expect(array).toBeArrayOfSize(size);\n    expect(array).toBeArrayOfStrings();\n    expect(array).toBeEmptyArray();\n    expect(array).toBeNonEmptyArray();\n\n## Booleans\n\n    expect(boolean).toBeBoolean();\n    expect(boolean).toBeFalse();\n    expect(boolean).toBeTrue();\n\n## Browser\n\n    expect(element).toBeHtmlCommentNode();\n    expect(element).toBeHtmlNode();\n    expect(element).toBeHtmlTextNode();\n    expect(object).toBeDocument();\n    expect(object).toBeWindow();\n\n## Exceptions\n\n    expect(fn).toThrowError();\n    expect(fn).toThrowErrorOfType(string);\n\n## Numbers\n\n    expect(number).toBeEvenNumber();\n    expect(number).toBeNumber();\n    expect(number).toBeOddNumber();\n    expect(number).toBeWholeNumber();\n    expect(number).toBeWithinRange(floor, ceiling);\n    expect(numberOrString).toBeCalculable();\n\n## Objects\n\n    expect(object).toBeFunction();\n    expect(object).toBeObject();\n    expect(object).toHaveArray(memberName);\n    expect(object).toHaveArrayOfBooleans(memberName);\n    expect(object).toHaveArrayOfNumbers(memberName);\n    expect(object).toHaveArrayOfObjects(memberName);\n    expect(object).toHaveArrayOfSize(memberName, size);\n    expect(object).toHaveArrayOfStrings(memberName);\n    expect(object).toHaveEmptyArray(memberName);\n    expect(object).toHaveNonEmptyArray(memberName);\n    expect(object).toImplement(api);\n\n## Strings\n\n    expect(string).toBeEmptyString();\n    expect(string).toBeHtmlString();\n    expect(string).toBeJsonString();\n    expect(string).toBeLongerThan(other);\n    expect(string).toBeNonEmptyString();\n    expect(string).toBeSameLengthAs(other);\n    expect(string).toBeShorterThan(other);\n    expect(string).toBeString();\n    expect(string).toBeWhitespace();\n    expect(string).toEndWith(expected);\n    expect(string).toStartWith(expected);\n\n## Dates\n\n    expect(date).toBeAfter(date);\n    expect(date).toBeBefore(date);\n    expect(date).toBeDate();\n    expect(string).toBeIso8601();\n\n## Usage\n\nJust include a reference to dist/jasmine-matchers.js after your reference to Jasmine, or use `require('jasmine-expect')`.\n\n## License\n\n> Copyright Â© 2013 Jamie Mason, @GotNoSugarBaby,\n> https://github.com/JamieMason\n\n> Permission is hereby granted, free of charge, to any person\n> obtaining a copy of this software and associated documentation files\n> (the \"Software\"), to deal in the Software without restriction,\n> including without limitation the rights to use, copy, modify, merge,\n> publish, distribute, sublicense, and/or sell copies of the Software,\n> and to permit persons to whom the Software is furnished to do so,\n> subject to the following conditions:\n\n> The above copyright notice and this permission notice shall be\n> included in all copies or substantial portions of the Software.\n\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n> NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n> BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n> ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n> CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n> SOFTWARE.\n",
  "homepage": "https://github.com/JamieMason/Jasmine-Matchers",
  "_id": "jasmine-expect@1.21.0",
  "dist": {
    "shasum": "09346ca7f7c2721be3350df4e8424f18b666cc14"
  },
  "_from": "jasmine-expect@",
  "_resolved": "https://registry.npmjs.org/jasmine-expect/-/jasmine-expect-1.21.0.tgz"
}
